w <- c(2, 1, 3, 1)
lm(w~x)
?lm
?weighted.mean
weighted.mean(x,w)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
a <- lm(y~x)
a$slope
?I
lm(y-mean(y) ~ x - mean(x)-1)
lm(y-mean(y) ~ ((x - mean(x))-1)
)
lm(y-mean(y) ~ ((x - mean(x))-1))
lm(I(y-mean(y)) ~ I((x - mean(x))-1))
data(mtcars)
attach(mtcars)
lm(mpg~weight)
lm(mpg~weight, data=mtcars)
summary(mtcars)
lm(mpg~wt)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(I(y-mean(y))~I(x-mean(x))-1)
lm(y~x)
myPlot<-function(beta){
yy<-y-mean(y)
xx<-x-mean(x)
freqData<-as.data.frame(table(xx,yy))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((yy-beta*xx)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
library(manipulate)
myPlot<-function(beta){
yy<-y-mean(y)
xx<-x-mean(x)
freqData<-as.data.frame(table(xx,yy))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((yy-beta*xx)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y-beta*x)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
freqData$x
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y-beta*x)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$x)),
as.numeric(as.vector(freqData$y)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0.6,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(0,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(-1,1.2,step=0.02))
myPlot<-function(beta){
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
y2<-y-mean(y)
x2<-x-mean(x)
freqData<-as.data.frame(table(x2,y2))
names(freqData)<-c("child","parent","freq")
plot(
as.numeric(as.vector(freqData$parent)),
as.numeric(as.vector(freqData$child
)),
pch=21,col="black",bg="lightblue",
cex=.15*freqData$freq,
xlab="parent",
ylab="child"
)
abline(0,beta,lwd=3)
points(0,0,cex=2,pch=19)
mse<-mean((y2-beta*x2)^2)
title(paste("beta=",beta,"mse=",round(mse,3)))
}
manipulate(myPlot(beta),beta=slider(-2,1.2,step=0.02))
.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
x <- c(8.58, 10.46, 9.01, 9.64, 8.86).
x <- c(8.58, 10.46, 9.01, 9.64, 8.86).
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
normalized = (x-min(x))/(max(x) - min(x))
normalized
normalized = (x-mean(x))/sd(x)
normzlied
normalized
mean(normalized)
sd(normalized)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
lm(y~x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
lm(x)
mean(x)
(1.39*.8)/(.8*.8)
(.72*.47)/(.47*.47)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
(x*y)/(x^2)
sum(x*y)/sum(x^2)
lm(y~(x-1))
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
lm(y~x)
a <- lm(y~x)
a$coefficient
a
std.dev(a)
std.dev
sd(a)
sd(a$coefficient)
summary(a)
.7224/.3107
pnorm(2.325072)
qnorm(2.325072)
tnorm(2.325072)
a$residual
b <- a$residual
summary(b)
summary(a)$sigma
data(mtcars)
clr(a)
rm(a)
rm(b)
rm(x)
rm(y)
mtcars
attach(mtcars)
lm(mpg~wt)
a <- lm(mpg~wt)
summary(a)
mean(wt)
mean(wt)/.5591
sumCoef <- a$coefficients
sumCoef[1,1]
a$coefficients
sumCoef <- summary(a)$coefficients
sumCoef
sumCoef[1,1]
sumCoef[1,1] + c(-1,1) * qt(.975, df=a$df) * sumCoef[1,2]
sumCoef[2,1] + c(-1,1) * qt(.975, df=a$df) * sumCoef[2,2]
?mtars
?mtcars
3 + c(-1,1) * qt(.975, df=a$df) * sumCoef[2,2]
wt
newdata=data.frame(wt=80)
predict(a, newdata, interval="predict")
newdata=data.frame(wt=3)
predict(a, newdata, interval="predict")
newdata
newdata=data.frame(wt=mean(wt))
newdata
predict(a, newdata, interval="predict")
mean(wt)
newdata
a
fit <- lm(mpg ~ wt, mtcars)
newdata <- data.frame(wt = mean(wt))
x <- predict(fit, newdata, interval = ("confidence"))
x
a
newdata
predict(a, newdata, interval="confidence")
a
a1 <- lm(mpg ~ I(wt-mean(wt)))
coef(a1)
lm(mpg~I(wt*2))
a
lm(mpg~I(wt/2))
c <- lm(mpg~I(wt/2))
newdata<-data.frame(w=mean(wt))
predict(c, newdata, interval="confidence")
newdata
c
predict(c, newdata, interval="confidence")
lm(mpg~I(wt/2))
c<- lm(mpg~I(wt/2))
summary(c)
summary(c)$coefficients
sumCoef <- summary(c)$coefficients
sumCoef
sumCoef[2,1] + c(-1,1) * qt(.975, df=c$df) * sumCoef[2,2]
a <- lm(mpg~wt)
anova(a)
847.73/278.32
y <- lm(mean(wt) ~ 1)
z <- lm(mpg~wt)
y/z
y
y[1,1]
y$coefficients
y$coefficients[1,1]
y$coefficients[1]
y$coefficients[1] / (278/847)
278/847
y
y$residual
z$residual
y$residuals
z$residuals
resid(z)
sum(resid(z)^2)
sum(resid(y)^2)
yhat <- predict(fit, newdata=data.frame(wt=mtcars$wt))
ymean <- mean(wt)
sum((mtcars$mpg-yhat)^2) / sum((mtcars$mpg - ymean)^2)
anova(fit)
sum((mtcars$mpg-yhat)^2)
sum((mtcars$mpg - ymean)^2)
fit
a
yhat <- predict(fit, newdata=data.frame(wt=mtcars$wt))
yhat
sum((mpg-yhat) ^2)
ymean <- predict(fit, mean(wt))
ymean
sum((mpg-ymean)^2)
ymean <- predict(fit, newdata=data.frame(wt=mean(wt)))
ymean
sum(mpg-ymean)^2)
sum((mpg-ymean)^2)
y <- sum((mpg-yhat) ^2)
z <- sum((mpg-ymean)^2)
y/z
library(caret)
install.packages("caret")
library(caret)
library(kernlab)
install.packages("kernlab")
library(kernlab)
data(spam)
spam
inTrain <- createDataPartition(y=spam$type, p=.75, list=FALSE)
class(inTrain)
inTrain
head(inTrain)
head(spam)
spam
spam$type
unique(spam$type)
table(spam$type)
table(unique(spam$type))
exit
require(rCharts)
haireye = as.data.frame(HairEyeColor)
n1 <- nPlot(Freq ~ Hair, group = 'Eye', type = 'multiBarChart',
data=subset(haireye, Sex == 'Male')
)
n1$save('n1.html')
n1
exit
setwd("~/LL/Coursera/Courses/Capstone/CapstoneProject")
path <- "~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/"
ruBlogs <- scan(paste(path, "ru_RU/ru_RU.blogs.utf8.txt", sep=""), what="char", quote="", skipNul=TRUE, encoding="UTF-8")
tail(ruBlogs)
ruBlogs <- scan(paste(path, "ru_RU/ru_RU.blogs.txt", sep=""), what="char", quote="", skipNul=TRUE, encoding="UTF-8")
tail(ruBlogs)
ruNews <- scan(paste(path, "ru_RU/ru_RU.news.txt", sep=""), what="char", quote="", skipNul=TRUE,
encoding="UTF-8")
tail(ruNews)
ruTwitter <- scan(paste(path, "ru_RU/ru_RU.twitter.txt", sep=""), what="char", quote="", skipNul=TRUE,
encoding="UTF-8")
tail(ruTwitter)
enBlogsRL <- readLines(paste(path, "en_US/en_US.blogs.txt", sep=""), what="char", quote="", skipNul=TRUE)
enBlogsRL <- readLines(paste(path, "en_US/en_US.blogs.txt", sep=""), skipNul=TRUE)
length(enBlogsRL)
enBlogsRL[1]
length(enBlogsRL[1])
nchar(enBlogsRL[1])
setwd("~/LL/Coursera/Courses/Capstone/CapstoneProject")
path <- "~/LL/Coursera/Courses/Capstone/Coursera-SwiftKey/final/"
enBlogsLines <- readLines(paste(path, "en_US/en_US.blogs.txt", sep=""), skipNul=TRUE)
for(i in 1:length(enBlogsLines)){
if (nchar(enBlogsLineslongest[i] > nchar(longestBlog)) {
longestBlog <- enBlogsLineslongest[i]
}
}
}
for(i in 1:length(enBlogsLines)){
if (nchar(enBlogsLineslongest[i] > nchar(longestBlog)) {
longestBlog <- enBlogsLineslongest[i]
}
}
longestBlog <- enBlogsLines[1]
for(i in 1:length(enBlogsLines)){
if (nchar(enBlogsLineslongest[i] > nchar(longestBlog)) {
longestBlog <- enBlogsLineslongest[i]
}
}
for(i in 1:length(enBlogsLines)){
if (nchar(enBlogsLineslongest[i]) > nchar(longestBlog)) {
longestBlog <- enBlogsLineslongest[i]
}
}
for(i in 1:length(enBlogsLines)){
if (nchar(enBlogsLines[i]) > nchar(longestBlog)) {
longestBlog <- enBlogsLines[i]
}
}
longestBlog
nchar(longestBlog)
for(i in 1:length(enNewsLines)){
if (nchar(enNewsLines[i]) > nchar(longestNews)) {
longestNews <- enNewsLines[i]
}
}
enNewsLines <- scan(paste(path, "en_US/en_US.news.txt", sep=""), skipNul=TRUE)
enTwitterLines <- scan(paste(path, "en_US/en_US.twitter.txt", sep=""), skipNul=TRUE)
enNewsLines <- readLines(paste(path, "en_US/en_US.news.txt", sep=""), skipNul=TRUE)
enTwitterLines <- readLines(paste(path, "en_US/en_US.twitter.txt", sep=""), skipNul=TRUE)
longestBlog <- enBlogsLines[1]
longestNews <- enNewsLines[1]
longestTwitter <- enTwitterLines[1]
for(i in 1:length(enNewsLines)){
if (nchar(enNewsLines[i]) > nchar(longestNews)) {
longestNews <- enNewsLines[i]
}
}
for(i in 1:length(enTwitterLines)){
if (nchar(enTwitterLines[i]) > nchar(longestTwitter)) {
longestTwitter <- enTwitterLines[i]
}
}
cols <- c("Blog", "News", "Twitter")
result <- data.frame(c,c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
result <- data.frame(cols,c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
result
longestBlog
nchar(longestBlog)
longestBlog <- enBlogsLines[1]
longestNews <- enNewsLines[1]
longestTwitter <- enTwitterLines[1]
for(i in 1:length(enBlogsLines)){
if (nchar(enBlogsLines[i]) > nchar(longestBlog)) {
longestBlog <- enBlogsLines[i]
}
}
for(i in 1:length(enNewsLines)){
if (nchar(enNewsLines[i]) > nchar(longestNews)) {
longestNews <- enNewsLines[i]
}
}
for(i in 1:length(enTwitterLines)){
if (nchar(enTwitterLines[i]) > nchar(longestTwitter)) {
longestTwitter <- enTwitterLines[i]
}
}
nchar(longestBlog)
nchar(longestNews)
nchar(longestTwitter)
?data.frame
result <- data.frame(c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
result
result <- data.frame(cols,c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
result
cols <- c("Blog", "News", "Twitter")
result <- data.frame(cols,c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
names(result)[1] <- paste("")
names(results)[2] <- paste("")
result
names(result)
names(results)[2]
cols <- c("Blog", "News", "Twitter")
result <- data.frame(cols,c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
names(result)[1] <- paste("")
names(result)[2] <- paste("")
result
cols <- c("Blog", "News", "Twitter")
result <- data.frame(cols,c(nchar(longestBlog),nchar(longestNews),nchar(longestTwitter)))
names(result)[1] <- paste(" ")
names(result)[2] <- paste(" ")
result
