r
class(r)
?httr
content(r, as=text)
content(r, as="text")
GET("http://google.com/", query = list(q = "ham"))
GET("http://google.com/", path = "search", query = list(q = "ham"))
a <- GET("http://google.com/", path = "search", query = list(q = "ham"))
names(a)
a$content
a
names(a)
names[1]
names[[1]]
names$url
a$url
a[1]
a[2]
a[3]
a[4]
a[5]
a[6]
a[7]
a[8]
a[9]
a
head(a)
tail(a)
library(RCurl)
library(XML)
site <- getForm("http://www.google.com/search", hl="en",
lr="", q="r-project", btnG="Search")
site
htmlParseTree(site)
htmlTreeParse(site)
a
htmlTreeParse(a)
searchResult <- GET("http://google.com/", path = "search", query = list(q = "texas"))
searchResult
typeof(searchResult)
gregexpr('<span.>.</span.>', searchResult)
gregexpr('<span[.]>[.]</span[.]>', searchResult)
gregexpr("<span[.]>[.]</span[.]>", searchResult)
gregexpr("<span.>.</span.>", searchResult)
extract <- gregexpr("<span.>.</span.>", searchResult, fixed=TRUE)[[1]]
extract
extract <- gregexpr("<span.>.</span.>", searchResult)
extract[[1]][1]
searchResult
?first
?substring
searchResult <- GET("http://google.com/", path = "search", query = list(q = "texas"))
htmlTreeParse(searchResult)
gregexpr("<span>.</span>", searchResult)
stringExtract <- substring(searchResult, first=1, last = 30)
posResults <- gregexpr("<span>.</span>", stringExtract)
posFirst <- posResults[[1]][1]
posFirst
posResults
posExtractStart <- gregexpr("<span.>", searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
posResults <- gregexpr("<span>.</span>", stringExtract)
posFirst <- posResults[[1]][1]
posFirst
library(XML)
library(RCurl)
library(httr)
searchResult <- GET("http://google.com/", path = "search", query = list(q = "texas"))
searchResult <- htmlTreeParse(searchResult)
class(searchResult)
posExtractStart <- gregexpr("<span.>", searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
posResults <- gregexpr("<span>.</span>", stringExtract)
posFirst <- posResults[[1]][1]
posFirst
typeof(searchResult)
searchResult
a <- paste(searchResult)
a
class(a)
posExtractStart <- gregexpr("value = \", searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
posResults <- gregexpr("value.\\".\\"\", stringExtract)
posExtractStart <- gregexpr("value", searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
posResults <- gregexpr("value", stringExtract)
posFirst <- posResults[[1]][1]
posFirts
posFirst
searchResult <- GET("http://google.com/", path = "search", query = list(q = "texas"))
searchResult
grep("Geograph", searchResult)
?grep
grep("Geograph", searchResult, value=TRUE)
grepl("Geograph", searchResult)
a <- as.character(searchResult <- GET("http://google.com/", path = "search", query = list(q = "texas")))
a
grepl("Geograph", a)
grep("Geograph", a, value=TRUE)
grep("geograph", a)
searchResult <- htmlTreeParse(searchResult)
searchResult
getURL(http://www.google.com)
getURL("http://www.google.com")
htmlTreeParse(getURL("http://www.google.com"))
site <- getForm("http://www.google.com/search", hl="en",
lr="", q="Texas", btnG="Search")
site
posExtractStart <- gregexpr("value", searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
posResults <- gregexpr("value", stringExtract)
posFirst <- posResults[[1]][1]
textLength  <- attributes(posResults[[1]])$match.length
stringExtract <- substring(stringExtract, first=posFirst, last = posFirst + textLength)
stringExtract <- gsub("[^0-9]", "", stringExtract)
posResults
htmlTreeParse(searchResults)
searchResult <- getForm("http://www.google.com/search", hl="en", lr="", q="Texas", btnG="Search")
searchResult <- htmlTreeParse(searchResult)
searchResult
typeof(searchResult)
searchResult <- getForm("http://www.google.com/search", hl="en", lr="", q="Texas", btnG="Search")
searchResult <- htmlTreeParse(searchResult)
indicator <- "<span>"
posExtractStart <- gregexpr(indicator, searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
#posResults <- gregexpr("value", stringExtract)
posFirst <- stringExtract[[1]][1]
posFirst
searchResult
searchResult <- getForm("http://www.google.com/search", hl="en", lr="", q="Texas", btnG="Search")
searchResult <- htmlTreeParse(searchResult)
indicator <- "<span class="st">"
posExtractStart <- gregexpr(indicator, searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
#posResults <- gregexpr("value", stringExtract)
posFirst <- stringExtract[[1]][1]
indicator <- "<span class=\\"st\\">"
indicator <- "<span class=\\s"st\\s">"
indicator <- "<span class=">"
indicator <- "<span class=>"
searchResult <- getForm("http://www.google.com/search", hl="en", lr="", q="Texas", btnG="Search")
searchResult <- htmlTreeParse(searchResult)
indicator <- "<span class=>"
posExtractStart <- gregexpr(indicator, searchResult, fixed = TRUE)[[1]]
stringExtract <- substring(searchResult, first=posExtractStart, last = posExtractStart + 30)
#posResults <- gregexpr("value", stringExtract)
posFirst <- stringExtract[[1]][1]
posFirst
?getForm
searchResult
posFirst
stringExtract
posExtractStart
site <- getForm("http://www.google.com/search", hl="en",
lr="", q="r-project", btnG="Search")
htmlTreeParse(site)
indicatorWord <- "of about"
siteHTML <- htmlTreeParse(site)
posExtractStart <- gregexpr(indicatorWord, siteHTML,
fixed = TRUE)[[1]]
stringExtract <- substring(siteHTML, first=posExtractStart,
last = posExtractStart + 30)
posResults <- gregexpr('<b>[0-9.,]{1,20}</b>', stringExtract)
posFirst <- posResults[[1]][1]
textLength  <- attributes(posResults[[1]])$match.length
stringExtract <- substring(stringExtract, first=posFirst,
last = posFirst + textLength)
stringExtract <- gsub("[^0-9]", "", stringExtract)
print(stringExtract)
posFirst
posResults
gregexpr(indicatorWord, siteHTML,
+                             fixed = TRUE)[[1]]
gregexpr(indicatorWord, siteHTML,fixed = TRUE)[[1]]
?Htr
?httr
searchResult <- GET("http://google.com/", path = "search", query = list(q = "ham"))
searchResult
searchResult <- GET("http://google.com/", path = "search", query = list(q = "texas"))
searchResult
names(searchResult)
names(htmlTreeParse(searchResult))
searchResult$url
searchResultA$status_code
searchResult$statusCode
searchResult$status_code
searchResult$headers
searchResults$all_headers
searchResult$all_headers
names(searchResult)
searchResult$cookies
searchResult$content
searchResult$content[1]
names(searchResult)
searchResult$date
searchResult[1]
searchResult$times
searchResult$request
searchResult$handle
?setkey
DT = data.table(A=5:1,B=letters[5:1])
library(data.table)
DT = data.table(A=5:1,B=letters[5:1])
DT
setkey(DT,B)
DT
tables()
key(DT)
input <- "hello my name is"
library(shiny)
options(warn=-1)
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder.R')
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder1.R')
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
i <- input
inp <- tolower(i)
inp <- strsplit(inp, " ")[[1]]
inp <- gsub("[,.:;?!']\\s*", "", inp)
inputTail <- tail(inp, 3)
n <- as.numeric(length(inputTail))
n
if (n == 3) {
grams <- readRDS("data/quadgramsDT25.rds")
gramsFreq <- grams[order(count, decreasing=TRUE)]
}
if (n == 3) {
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDT25.rds")
gramsFreq <- grams[order(count, decreasing=TRUE)]
}
system.time(gramsFreq <- grams[order(count, decreasing=TRUE)])
system.time(grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDT25.rds"))
system.time(grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDTprune25.rds"))
system.time(grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/trigramsDTprune25.rds"))
system.time(grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigramsDTprune25.rds"))
system.time(grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigramsDTprune25.rds"))
subset25 <- readRDS(("~/datasciencecoursera/Courses/Capstone/Subsets/Subset25.rds"))
s1 <- subset25
system.time(b1 <- dfm(s1, ngrams = 2))
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
enBlogs <- stri_read_lines("~/datasciencecoursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt") #user 3.437, system .496, elapsed 3.982
set.seed(100)
enBlogsSubset <- sample(enBlogs, size=length(enBlogs)*.1, replace=FALSE)
enTwitter <- readLines("~/datasciencecoursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.twitter.txt")
set.seed(100)
enTwitterSubset <- sample(enTwitter, size=length(enTwitter)*.1, replace=FALSE)
enNews <- stri_read_lines("~/datasciencecoursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.news.txt")
set.seed(100)
enNewsSubset <- sample(enNews, size=length(enNews)*.1, replace=FALSE)
subset <- c(enBlogsSubset, enTwitterSubset, enNewsSubset)
b1 <- subset
system.time(b1 <- dfm(s1, ngrams = 2))
library(quanteda)
system.time(b1 <- dfm(s1, ngrams = 2))
class(b1)
class(s1)
s1 <- subset
system.time(b1 <- dfm(s1, ngrams = 2))
saveRDS(b1, file = "~/datasciencecoursera/Courses/Capstone/Subsets/bigrams10.rds")
rm(b1)
system.time(b1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams10.rds"))
system.time(grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDTprune25.rds"))
system.time(t1 <- dfm(s1, ngrams = 3))
saveRDS(t1, file = "~/datasciencecoursera/Courses/Capstone/Subsets/trigrams10.rds")
system.time(t1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams10.rds"))
system.time(q1 <- dfm(s1, ngrams = 4))
saveRDS(q1, file = "~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams10.rds")
system.time(q <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams10.rds"))
library(tm)
library(stringi)
library(RWeka)
library(SnowballC)
library(slam)
library(data.table)
library(tidyr)
enBlogs <- stri_read_lines("~/datasciencecoursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.blogs.txt",
encoding="UTF-8")
set.seed(100)
enBlogsSubset <- sample(enBlogs, size=length(enBlogs)*.01, replace=FALSE)
enTwitter <- readLines("~/datasciencecoursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.twitter.txt",
encoding="UTF-8")
set.seed(100)
enTwitterSubset <- sample(enTwitter, size=length(enTwitter)*.01, replace=FALSE)
enNews <- stri_read_lines("~/datasciencecoursera/Courses/Capstone/Coursera-SwiftKey/final/en_US/en_US.news.txt",
encoding="UTF-8")
set.seed(100)
enNewsSubset <- sample(enNews, size=length(enNews)*.01, replace=FALSE)
subset <- c(enBlogsSubset, enTwitterSubset, enNewsSubset)
s1 <- subset
b1 <- dfm(s1, ngrams=2)
library(quanteda)
b1 <- dfm(s1, ngrams=2)
saveRDS(b1, file = "~/datasciencecoursera/Courses/Capstone/Subsets/bigrams01.rds")
t1 <- dfm(s1, ngrams=3)
saveRDS(t1, file = "~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds")
q1 <- dfm(s1, ngrams=4)
saveRDS(q1, file = "~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
system.time(b1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds"))
system.time(t1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds"))
system.time(q1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/qudgrams01.rds"))
system.time(q1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds"))
system.time(b1 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams01.rds"))
u1 <- dfm(s1)
shiny::runApp('datasciencecoursera/Courses/Capstone/capstoneproject/App')
a <- readRDS("data/bigramsDT25.rds")
a <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/Unigrams.rds")
class(a)
b <- readRDS"(~/datasciencecoursera/Courses/Capstone/Subsets/bigrams10.rds")
b <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams10.rds")
class(b)
b <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams01.rds")
class(b)
shiny::runApp('datasciencecoursera/Courses/Capstone/capstoneproject/App')
shiny::runApp('datasciencecoursera/Courses/Capstone/capstoneproject/App')
a <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds")
class(a)
shiny::runApp('datasciencecoursera/Courses/Capstone/capstoneproject/App')
update.packages()
shiny::runApp('datasciencecoursera/Courses/Capstone/capstoneproject/App')
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor3.R')
NextWordPredictor3("hello my name is")
exit
shiny::runApp('datasciencecoursera/Courses/Capstone/capstoneproject/App')
setwd("~/datasciencecoursera/Courses/Capstone/capstoneproject")
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor3.R')
NextWordPredictor3("hello my nae is")
close(con)
close("~/datasciencecoursera/Courses/Capstone/Subsets/trigramsDT25.rds")
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/trigramsDT25.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDT25.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/bigramsDT25.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams10.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams10.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams10.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams01.rds"))
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/bigrams0.rds"))
NextWordPredictor3("hello my name is")
NextWordPredictor3("hello my name is")
1
close(gzfile("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDTprune25.rds"))
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor3.R')
NextWordPredictor3("hello my name is")
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor31.R')
NextWordPredictor3("hello my name is")
?order
?Count
?count
input <- "hello my name is"
input <- tolower(input)
input <- strsplit(input, " ")[[1]]
input <- gsub("[,.:;?!']\\s*", "", input)
inputTail <- tail(input, 3)
n <- as.numeric(length(inputTail))
n
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
grams
grams$count
order(count, decreasing=TRUE)
grams[order(count, decreasing=TRUE)]
gramsFreq <- grams[order(count, decreasing=TRUE)]
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDT25.rds")
gramsFreq <- grams[order(count, decreasing=TRUE)]
count
order(count, decreasing=TRUE)
names(grams)
grams$count
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
names(grams)
grams
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDT25.rds")
grams
rm(list=ls())
options(warn=-1)
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder.R')
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder1.R')
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
quadgrams <- rollup(grams,2,na.rm=TRUE,fun=sum)
library(slam)
quadgrams <- rollup(grams,2,na.rm=TRUE,fun=sum)
grams
rm(list=ls())
options(warn=-1)
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder.R')
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder1.R')
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
library(slam)
quadgrams <- rollup(grams,2,na.rm=TRUE,fun=sum)
grams <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
quadgrams <- rollup(grams,2,na.rm=TRUE,fun=sum)
quadgramsDT25 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgramsDT25.rds")
length(quadgramsDT25)
nrow(quadgramsDT25)
quadgramsDt25
quadgramsDT25
quadgramsDT25Freq <- quadgramsDT25[order(count, decreasing=TRUE)]
quadgramsDT25Freq
nrows(quadgramsDT25Freq)
nrow(quadgramsDT25Freq)
quadgramsDT25Freq[270000,]
quadgramsDT25Freq <- quadgramsDT25Freq[1:270000,]
quadgramsDT25Freq
tail(quadgramsDT25Freq)
saveRDS(quadgramsDT25Freq, file="~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
a <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/quadgrams01.rds")
a
trigramsDT25 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds")
trigramsDT25
trigramsDT25Freq <- trigramsDT25[order(count, decreasing=TRUE)]
trigramsDT25 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/trigramsDT25.rds")
trigramsDT25
trigramsDT25Freq <- trigramsDT25[order(count, decreasing=TRUE)]
trigramsDT25Freq
nrow(trigramsDT25Freq)
trigramsDT25Freq[327000,]
trigramsDT25Freq[400000,]
trigramsDT25Freq[350000,]
trigramsDT25Freq[360000,]
trigramsDT25Freq[375000,]
trigramsDT25Freq[390000,]
trigramsDT25Freq[380000,]
trigramsDT25Freq[384000,]
trigramsDT25Freq[387000,]
trigramsDT25Freq[389000,]
trigramsDT25Freq <- trigramsDT25Freq[1:390000,]
trigramsDT25Freq
saveRDS(trigramsDT25Freq, "~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds")
bigramsDT25 <- readRDS("~/datasciencecoursera/Courses/Capstone/Subsets/bigramsDT25.rds")
bigramsDT25Freq <- bigramsDT25[order(count, decreasing=TRUE)]
bigramsDT25Freq
nrow(bigramsDT25Freq)
bigramsDT25Freq[232000,]
bigramsDT25Freq[400000,]
bigramsDT25Freq[500000,]
bigramsDT25Freq[800000,]
bigramsDT25Freq[1200000,]
bigramsDT25Freq[1000000,]
bigramsDT25Freq[1100000,]
bigramsDT25Freq <- bigramsDT25Freq[1:1200000,]
bigramsDT25Freq
saveRDS(bigramsDT25Freq, file="~/datasciencecoursera/Courses/Capstone/Subsets/bigrams01.rds")
tri <- readRDS(("~/datasciencecoursera/Courses/Capstone/Subsets/trigrams01.rds")
)
tri
input <- "hello"
input <- tolower(input)
input <- strsplit(input, " ")[[1]]
input <- gsub("[,.:;?!']\\s*", "", input)
inputTail <- tail(input, 3)
n <- as.numeric(length(inputTail))
n
rm(list=ls())
options(warn=-1)
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder.R')
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/ngramTailFinder1.R')
library(stringi)
library(tm)
library(quanteda)
library(RWeka)
library(tm)
library(tau)
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor31.R')
NextWordPredictor3("hello my name is")
NextWordPredictor3("hello my name")
NextWordPredictor3("hello my name is")
NextWordPredictor3("hello my name")
1
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor31.R')
NextWordPredictor3("hello my name")
NextWordPredictor3("hello my name")
1
###########################################################################################
foundFailTail <- tail(lastWords, 3)
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor31.R')
NextWordPredictor3("hello my name")
NextWordPredictor3("hello my name is")
source('~/datasciencecoursera/Courses/Capstone/capstoneproject/NextWordPredictor31.R')
shiny::runApp('App')
shiny::runApp('App')
shiny::runApp('App')
shiny::runApp('App')
shinyapps::setAccountInfo(name='ll8054', token='7ED5DDDADFE3795735265171152DD5C6', secret='c+/nHv6he3GYnAfbYOSDE1ruCc/QBJdL9kcRuMPi')
deployApp()
library(shinyapps)
deployApp()
setwd("~/datasciencecoursera/Courses/Capstone/capstoneproject/App")
deployApp()
shinyapps::setAccountInfo(name='ll8054', token='7ED5DDDADFE3795735265171152DD5C6', secret='c+/nHv6he3GYnAfbYOSDE1ruCc/QBJdL9kcRuMPi')
deployApp()
deployApp(appName="WordPredictor")
